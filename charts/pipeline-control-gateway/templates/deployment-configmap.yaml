{{- $context := deepCopy . -}}

{{- /* Compute all endpoints using helper functions */ -}}
{{- $endpoints := dict -}}
{{- $_ := set $endpoints "nrHost" (include "nrKubernetesOtel.NrHost.endpoint" .) -}}
{{- $_ := set $endpoints "grpc" (include "nrKubernetesOtel.grpc.endpoint" .) -}}
{{- $_ := set $endpoints "otel" (include "nrKubernetesOtel.endpoint" .) -}}
{{- $_ := set $endpoints "eventApi" (include "nrKubernetesOtel.event.endpoint" .) -}}
{{- $_ := set $endpoints "infraEventApi" (include "nrKubernetesOtel.infra-event.endpoint" .) -}}
{{- $_ := set $endpoints "logApi" (include "nrKubernetesOtel.log.endpoint" .) -}}
{{- $_ := set $endpoints "metrics" (include "nrKubernetesOtel.metrics.endpoint" .) -}}
{{- $_ := set $endpoints "traces" (include "nrKubernetesOtel.traces.endpoint" .) -}}

{{- /* Check if verbose logging is enabled */ -}}
{{- $verboseLog := include "newrelic.common.verboseLog" . -}}
{{- $lowDataMode := include "nrKubernetesOtel.lowDataMode" . -}}

{{- /* Set computed values */ -}}
{{- $_ := set $context.Values "hasVerboseLog" (not (empty $verboseLog)) -}}
{{- $_ := set $context.Values "computedLogLevel" "debug" -}}
{{- $_ := set $context.Values "computedMetricsLevel" "detailed" -}}

{{- /* Add computed values to context */ -}}
{{- $_ := set $context.Values "endpoints" $endpoints -}}

{{- /* Get config from helper or use generated fallback */ -}}
{{- $configContent := include "nrKubernetesOtel.deployment.configMap.config" . -}}
{{- if not $configContent -}}
  {{- $configContent = tpl .Values.generated $context -}}
{{- end -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nrKubernetesOtel.deployment.configMap.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  gateway-config.yaml: |
    reserved_melt_attributes:
      Metric:
        - interval.ms
        - metricName
  deployment-config.yaml: |{{ $configContent | nindent 4 }}